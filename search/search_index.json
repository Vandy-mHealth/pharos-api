{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Routes User create user POST /user/create sign in user POST /user/signin Landmark create landmark for user POST /landmark/?user_id=<user_id> read landmarks for user GET /landmark?user_id=<user_id> read all landmarks GET /landmark Network Measurements create network measurements for user and landmark id POST /network/?user_id=<user_id>&landmark_id=<landmark_id> read network measurements for user GET /network?user_id=<user_id> read all landmarks GET /network Photo create photo for user and landmark id POST /photo/?user_id=<user_id>&landmark_id=<landmark_id> read photos for user GET /photo?user_id=<user_id> read all photos GET /photo","title":"Routes"},{"location":"#routes","text":"","title":"Routes"},{"location":"#user","text":"create user POST /user/create sign in user POST /user/signin","title":"User"},{"location":"#landmark","text":"create landmark for user POST /landmark/?user_id=<user_id> read landmarks for user GET /landmark?user_id=<user_id> read all landmarks GET /landmark","title":"Landmark"},{"location":"#network-measurements","text":"create network measurements for user and landmark id POST /network/?user_id=<user_id>&landmark_id=<landmark_id> read network measurements for user GET /network?user_id=<user_id> read all landmarks GET /network","title":"Network Measurements"},{"location":"#photo","text":"create photo for user and landmark id POST /photo/?user_id=<user_id>&landmark_id=<landmark_id> read photos for user GET /photo?user_id=<user_id> read all photos GET /photo","title":"Photo"},{"location":"examples/landmark/","text":"Create landmark POST /landmark/create?user_id=<user_id> axios . post ( url , { \"landmark\" : { \"latitude\" : 0 , \"longitude\" : 0 , \"landmark_type\" : \"string\" , \"device_id\" : 0 , \"file_url\" : \"string\" }, \"network\" : { \"ping_time\" : 0 , \"frequency\" : 0 , \"file_size\" : 0 , \"file_location\" : \"string\" , \"download_speed\" : 0 , \"download_latency\" : 0 , \"download_duration\" : 0 , \"upload_speed\" : 0 , \"upload_duration\" : 0 , \"gps_latitude\" : 0 , \"gps_longitude\" : 0 , \"device_id\" : 0 }, \"photo\" : { \"url\" : \"string\" } }) example response { \"latitude\" : 0 , \"longitude\" : 0 , \"landmark_type\" : \"string\" , \"device_id\" : 0 , \"file_url\" : \"string\" , \"id\" : 2 , \"timestamp\" : \"2022-01-24T13:25:23.286296\" , \"owner_id\" : \"c301644d-7a4f-4294-adcf-6646d2735202\" , \"network_measurements\" : [ { \"ping_time\" : 0 , \"frequency\" : 0 , \"file_size\" : 0 , \"file_location\" : \"string\" , \"download_speed\" : 0 , \"download_latency\" : 0 , \"download_duration\" : 0 , \"upload_speed\" : 0 , \"upload_duration\" : 0 , \"gps_latitude\" : 0 , \"gps_longitude\" : 0 , \"device_id\" : 0 , \"id\" : 2 , \"timestamp\" : \"2022-01-24T13:25:23.286967\" , \"landmark_id\" : 2 , \"owner_id\" : \"c301644d-7a4f-4294-adcf-6646d2735202\" } ], \"photos\" : [ { \"url\" : \"string\" , \"id\" : 2 , \"uploaded_at\" : \"2022-01-24T13:25:23.287614\" , \"landmark_id\" : 2 , \"owner_id\" : \"c301644d-7a4f-4294-adcf-6646d2735202\" } ] } Note Landmarks can be created without uploading network measurements or photos in the first place. If network_measurements or photos field is not provided, only the landmark will be created. example response when user id does not exist { \"detail\" : \"User not found\" } Read landmarks read all landmarks GET /landmark axios . get ( url ) // returns [ { \"latitude\" : 0 , \"longitude\" : 0 , \"landmark_type\" : \"string\" , \"device_id\" : 0 , \"file_url\" : \"string\" , \"id\" : 1 , \"timestamp\" : \"2022-01-24T13:24:43.930960\" , \"owner_id\" : \"c301644d-7a4f-4294-adcf-6646d2735202\" , \"network_measurements\" : [ { \"ping_time\" : 0 , \"frequency\" : 0 , \"file_size\" : 0 , \"file_location\" : \"string\" , \"download_speed\" : 0 , \"download_latency\" : 0 , \"download_duration\" : 0 , \"upload_speed\" : 0 , \"upload_duration\" : 0 , \"gps_latitude\" : 0 , \"gps_longitude\" : 0 , \"device_id\" : 0 , \"id\" : 1 , \"timestamp\" : \"2022-01-24T13:24:43.931900\" , \"landmark_id\" : 1 , \"owner_id\" : \"c301644d-7a4f-4294-adcf-6646d2735202\" } ], \"photos\" : [ { \"url\" : \"string\" , \"id\" : 1 , \"uploaded_at\" : \"2022-01-24T13:24:43.932665\" , \"landmark_id\" : 1 , \"owner_id\" : \"c301644d-7a4f-4294-adcf-6646d2735202\" } ] }, ... ] get landmarks uploaded by a specific user GET /landmark/?user_id=<user_id>","title":"Landmark"},{"location":"examples/landmark/#create-landmark","text":"POST /landmark/create?user_id=<user_id> axios . post ( url , { \"landmark\" : { \"latitude\" : 0 , \"longitude\" : 0 , \"landmark_type\" : \"string\" , \"device_id\" : 0 , \"file_url\" : \"string\" }, \"network\" : { \"ping_time\" : 0 , \"frequency\" : 0 , \"file_size\" : 0 , \"file_location\" : \"string\" , \"download_speed\" : 0 , \"download_latency\" : 0 , \"download_duration\" : 0 , \"upload_speed\" : 0 , \"upload_duration\" : 0 , \"gps_latitude\" : 0 , \"gps_longitude\" : 0 , \"device_id\" : 0 }, \"photo\" : { \"url\" : \"string\" } }) example response { \"latitude\" : 0 , \"longitude\" : 0 , \"landmark_type\" : \"string\" , \"device_id\" : 0 , \"file_url\" : \"string\" , \"id\" : 2 , \"timestamp\" : \"2022-01-24T13:25:23.286296\" , \"owner_id\" : \"c301644d-7a4f-4294-adcf-6646d2735202\" , \"network_measurements\" : [ { \"ping_time\" : 0 , \"frequency\" : 0 , \"file_size\" : 0 , \"file_location\" : \"string\" , \"download_speed\" : 0 , \"download_latency\" : 0 , \"download_duration\" : 0 , \"upload_speed\" : 0 , \"upload_duration\" : 0 , \"gps_latitude\" : 0 , \"gps_longitude\" : 0 , \"device_id\" : 0 , \"id\" : 2 , \"timestamp\" : \"2022-01-24T13:25:23.286967\" , \"landmark_id\" : 2 , \"owner_id\" : \"c301644d-7a4f-4294-adcf-6646d2735202\" } ], \"photos\" : [ { \"url\" : \"string\" , \"id\" : 2 , \"uploaded_at\" : \"2022-01-24T13:25:23.287614\" , \"landmark_id\" : 2 , \"owner_id\" : \"c301644d-7a4f-4294-adcf-6646d2735202\" } ] } Note Landmarks can be created without uploading network measurements or photos in the first place. If network_measurements or photos field is not provided, only the landmark will be created. example response when user id does not exist { \"detail\" : \"User not found\" }","title":"Create landmark"},{"location":"examples/landmark/#read-landmarks","text":"read all landmarks GET /landmark axios . get ( url ) // returns [ { \"latitude\" : 0 , \"longitude\" : 0 , \"landmark_type\" : \"string\" , \"device_id\" : 0 , \"file_url\" : \"string\" , \"id\" : 1 , \"timestamp\" : \"2022-01-24T13:24:43.930960\" , \"owner_id\" : \"c301644d-7a4f-4294-adcf-6646d2735202\" , \"network_measurements\" : [ { \"ping_time\" : 0 , \"frequency\" : 0 , \"file_size\" : 0 , \"file_location\" : \"string\" , \"download_speed\" : 0 , \"download_latency\" : 0 , \"download_duration\" : 0 , \"upload_speed\" : 0 , \"upload_duration\" : 0 , \"gps_latitude\" : 0 , \"gps_longitude\" : 0 , \"device_id\" : 0 , \"id\" : 1 , \"timestamp\" : \"2022-01-24T13:24:43.931900\" , \"landmark_id\" : 1 , \"owner_id\" : \"c301644d-7a4f-4294-adcf-6646d2735202\" } ], \"photos\" : [ { \"url\" : \"string\" , \"id\" : 1 , \"uploaded_at\" : \"2022-01-24T13:24:43.932665\" , \"landmark_id\" : 1 , \"owner_id\" : \"c301644d-7a4f-4294-adcf-6646d2735202\" } ] }, ... ] get landmarks uploaded by a specific user GET /landmark/?user_id=<user_id>","title":"Read landmarks"},{"location":"examples/network/","text":"Create network measurements create network measurements for a user and a landmark POST /network/create/?user_id=<user_id>&landmark_id=<landmark_id> example request axios . post ( url , { \"ping_time\" : 0 , \"frequency\" : 0 , \"file_size\" : 0 , \"file_location\" : \"string\" , \"download_speed\" : 0 , \"download_latency\" : 0 , \"download_duration\" : 0 , \"upload_speed\" : 0 , \"upload_duration\" : 0 , \"gps_latitude\" : 0 , \"gps_longitude\" : 0 , \"device_id\" : 0 }) example response { \"ping_time\" : 0 , \"frequency\" : 0 , \"file_size\" : 0 , \"file_location\" : \"string\" , \"download_speed\" : 0 , \"download_latency\" : 0 , \"download_duration\" : 0 , \"upload_speed\" : 0 , \"upload_duration\" : 0 , \"gps_latitude\" : 0 , \"gps_longitude\" : 0 , \"device_id\" : 0 , \"id\" : 3 , \"timestamp\" : \"2022-01-24T13:36:43.903816\" , \"landmark_id\" : 2 , \"owner_id\" : \"c301644d-7a4f-4294-adcf-6646d2735202\" } error when user does not exist { \"detail\" : \"User not found\" } error when landmark does not exist { \"detail\" : \"Landmark not found\" } Read network measurements read all network measurements GET /network [ { \"ping_time\" : 0 , \"frequency\" : 0 , \"file_size\" : 0 , \"file_location\" : \"string\" , \"download_speed\" : 0 , \"download_latency\" : 0 , \"download_duration\" : 0 , \"upload_speed\" : 0 , \"upload_duration\" : 0 , \"gps_latitude\" : 0 , \"gps_longitude\" : 0 , \"device_id\" : 0 , \"id\" : 1 , \"timestamp\" : \"2022-01-24T13:24:43.931900\" , \"landmark_id\" : 1 , \"owner_id\" : \"c301644d-7a4f-4294-adcf-6646d2735202\" }, { \"ping_time\" : 0 , \"frequency\" : 0 , \"file_size\" : 0 , \"file_location\" : \"string\" , \"download_speed\" : 0 , \"download_latency\" : 0 , \"download_duration\" : 0 , \"upload_speed\" : 0 , \"upload_duration\" : 0 , \"gps_latitude\" : 0 , \"gps_longitude\" : 0 , \"device_id\" : 0 , \"id\" : 2 , \"timestamp\" : \"2022-01-24T13:25:23.286967\" , \"landmark_id\" : 2 , \"owner_id\" : \"c301644d-7a4f-4294-adcf-6646d2735202\" }, ... ] read all network measurements for a specific user GET /network/?user_id=<user_id>","title":"Network"},{"location":"examples/network/#create-network-measurements","text":"create network measurements for a user and a landmark POST /network/create/?user_id=<user_id>&landmark_id=<landmark_id> example request axios . post ( url , { \"ping_time\" : 0 , \"frequency\" : 0 , \"file_size\" : 0 , \"file_location\" : \"string\" , \"download_speed\" : 0 , \"download_latency\" : 0 , \"download_duration\" : 0 , \"upload_speed\" : 0 , \"upload_duration\" : 0 , \"gps_latitude\" : 0 , \"gps_longitude\" : 0 , \"device_id\" : 0 }) example response { \"ping_time\" : 0 , \"frequency\" : 0 , \"file_size\" : 0 , \"file_location\" : \"string\" , \"download_speed\" : 0 , \"download_latency\" : 0 , \"download_duration\" : 0 , \"upload_speed\" : 0 , \"upload_duration\" : 0 , \"gps_latitude\" : 0 , \"gps_longitude\" : 0 , \"device_id\" : 0 , \"id\" : 3 , \"timestamp\" : \"2022-01-24T13:36:43.903816\" , \"landmark_id\" : 2 , \"owner_id\" : \"c301644d-7a4f-4294-adcf-6646d2735202\" } error when user does not exist { \"detail\" : \"User not found\" } error when landmark does not exist { \"detail\" : \"Landmark not found\" }","title":"Create network measurements"},{"location":"examples/network/#read-network-measurements","text":"read all network measurements GET /network [ { \"ping_time\" : 0 , \"frequency\" : 0 , \"file_size\" : 0 , \"file_location\" : \"string\" , \"download_speed\" : 0 , \"download_latency\" : 0 , \"download_duration\" : 0 , \"upload_speed\" : 0 , \"upload_duration\" : 0 , \"gps_latitude\" : 0 , \"gps_longitude\" : 0 , \"device_id\" : 0 , \"id\" : 1 , \"timestamp\" : \"2022-01-24T13:24:43.931900\" , \"landmark_id\" : 1 , \"owner_id\" : \"c301644d-7a4f-4294-adcf-6646d2735202\" }, { \"ping_time\" : 0 , \"frequency\" : 0 , \"file_size\" : 0 , \"file_location\" : \"string\" , \"download_speed\" : 0 , \"download_latency\" : 0 , \"download_duration\" : 0 , \"upload_speed\" : 0 , \"upload_duration\" : 0 , \"gps_latitude\" : 0 , \"gps_longitude\" : 0 , \"device_id\" : 0 , \"id\" : 2 , \"timestamp\" : \"2022-01-24T13:25:23.286967\" , \"landmark_id\" : 2 , \"owner_id\" : \"c301644d-7a4f-4294-adcf-6646d2735202\" }, ... ] read all network measurements for a specific user GET /network/?user_id=<user_id>","title":"Read network measurements"},{"location":"examples/photo/","text":"Create photos for user and landmark POST /photo/?user_id=<user_id> example request axios . get ( url , { \"url\" : \"string\" }) example response { \"url\" : \"string\" , \"id\" : 3 , \"uploaded_at\" : \"2022-01-24T13:45:29.477201\" , \"landmark_id\" : 2 , \"owner_id\" : \"c301644d-7a4f-4294-adcf-6646d2735202\" } error when user does not exist { \"detail\" : \"User not found\" } error when landmark does not exist { \"detail\" : \"Landmark not found\" } Read photos read photos for a specific user GET /photo/?user_id=<user_id> axios . get ( url ) // returns [ { \"url\" : \"string\" , \"id\" : 3 , \"uploaded_at\" : \"2022-01-24T13:45:29.477201\" , \"landmark_id\" : 2 , \"owner_id\" : \"c301644d-7a4f-4294-adcf-6646d2735202\" } ... ] read all photos GET /photo","title":"Photo"},{"location":"examples/photo/#create-photos-for-user-and-landmark","text":"POST /photo/?user_id=<user_id> example request axios . get ( url , { \"url\" : \"string\" }) example response { \"url\" : \"string\" , \"id\" : 3 , \"uploaded_at\" : \"2022-01-24T13:45:29.477201\" , \"landmark_id\" : 2 , \"owner_id\" : \"c301644d-7a4f-4294-adcf-6646d2735202\" } error when user does not exist { \"detail\" : \"User not found\" } error when landmark does not exist { \"detail\" : \"Landmark not found\" }","title":"Create photos for user and landmark"},{"location":"examples/photo/#read-photos","text":"read photos for a specific user GET /photo/?user_id=<user_id> axios . get ( url ) // returns [ { \"url\" : \"string\" , \"id\" : 3 , \"uploaded_at\" : \"2022-01-24T13:45:29.477201\" , \"landmark_id\" : 2 , \"owner_id\" : \"c301644d-7a4f-4294-adcf-6646d2735202\" } ... ] read all photos GET /photo","title":"Read photos"},{"location":"examples/user/","text":"Create user POST /user/create example request axios . post ( url , { \"email\" : \"user@example.com\" , \"pin\" : 123456 , \"full_name\" : \"jane doe\" }) example response { \"email\" : \"user@example.com\" , \"pin\" : 123456 , \"full_name\" : \"jane doe\" , \"id\" : \"c301644d-7a4f-4294-adcf-6646d2735202\" , \"created_at\" : \"2022-01-24T12:35:47.554672\" , \"organization\" : null , \"address\" : null , \"landmarks\" : [], \"photos\" : [], \"network_measurements\" : [] } Signin user POST user/signin example request axios . post ( url , { \"email\" : \"user@example.com\" , \"pin\" : 123456 }) example response { \"email\" : \"user@example.com\" , \"pin\" : 123456 , \"full_name\" : \"jane doe\" , \"id\" : \"c301644d-7a4f-4294-adcf-6646d2735202\" , \"created_at\" : \"2022-01-24T12:35:47.554672\" , \"organization\" : null , \"address\" : null , \"landmarks\" : [], \"photos\" : [], \"network_measurements\" : [] } example response when email doesn't exist // s tatus _code = 400 { \"detail\" : \"Email not found\" } example response when pin is wrong // s tatus _code = 400 { \"detail\" : \"Wrong pin number\" } Update user PUT /user/?user_id=<user_id> example request axios . post ( url , { \"email\" : \"newemail@example.com\" , \"address\" : \"somewhere in the world\" }) example response { \"email\" : \"newemail@example.com\" , \"pin\" : 123456 , \"full_name\" : \"jane doe\" , \"id\" : \"c301644d-7a4f-4294-adcf-6646d2735202\" , \"created_at\" : \"2022-01-24T12:35:47.554672\" , \"organization\" : null , \"address\" : \"somewhere in the world\" , \"landmarks\" : [], \"photos\" : [], \"network_measurements\" : [] }","title":"User"},{"location":"examples/user/#create-user","text":"POST /user/create example request axios . post ( url , { \"email\" : \"user@example.com\" , \"pin\" : 123456 , \"full_name\" : \"jane doe\" }) example response { \"email\" : \"user@example.com\" , \"pin\" : 123456 , \"full_name\" : \"jane doe\" , \"id\" : \"c301644d-7a4f-4294-adcf-6646d2735202\" , \"created_at\" : \"2022-01-24T12:35:47.554672\" , \"organization\" : null , \"address\" : null , \"landmarks\" : [], \"photos\" : [], \"network_measurements\" : [] }","title":"Create user"},{"location":"examples/user/#signin-user","text":"POST user/signin example request axios . post ( url , { \"email\" : \"user@example.com\" , \"pin\" : 123456 }) example response { \"email\" : \"user@example.com\" , \"pin\" : 123456 , \"full_name\" : \"jane doe\" , \"id\" : \"c301644d-7a4f-4294-adcf-6646d2735202\" , \"created_at\" : \"2022-01-24T12:35:47.554672\" , \"organization\" : null , \"address\" : null , \"landmarks\" : [], \"photos\" : [], \"network_measurements\" : [] } example response when email doesn't exist // s tatus _code = 400 { \"detail\" : \"Email not found\" } example response when pin is wrong // s tatus _code = 400 { \"detail\" : \"Wrong pin number\" }","title":"Signin user"},{"location":"examples/user/#update-user","text":"PUT /user/?user_id=<user_id> example request axios . post ( url , { \"email\" : \"newemail@example.com\" , \"address\" : \"somewhere in the world\" }) example response { \"email\" : \"newemail@example.com\" , \"pin\" : 123456 , \"full_name\" : \"jane doe\" , \"id\" : \"c301644d-7a4f-4294-adcf-6646d2735202\" , \"created_at\" : \"2022-01-24T12:35:47.554672\" , \"organization\" : null , \"address\" : \"somewhere in the world\" , \"landmarks\" : [], \"photos\" : [], \"network_measurements\" : [] }","title":"Update user"},{"location":"schemas/","text":"There are two types of schema involved in Pharos API request/schema : controls the required input/output when submitting GET , POST , PUT requests database schema : controls the data is actually stored inside the database For example, a user entity has the following schema field POST Request database id auto UUID (PK) email email-like string string pin big integer (6 digits) big integer full_name string string created_at datetime organization string string address string string field indicates both the request json key and database column name. The second column is the request/response schema. A bold field means it is required during creation. A empty field means it won't be used and should be auto-generated by the database. The third column is the database schema. A bold field means it's not nullable in the database. In summary, the required request to create a user looks like axios . post ( url , { \"email\" : \"user@example.com\" , \"pin\" : 123456 , \"full_name\" : \"jane doe\" }) and the returned response (from the database) will be { \"email\" : \"user@example.com\" , \"pin\" : 123456 , \"full_name\" : \"jane doe\" , \"id\" : \"c301644d-7a4f-4294-adcf-6646d2735202\" , \"created_at\" : \"2022-01-24T12:35:47.554672\" , \"organization\" : null , \"address\" : null , \"landmarks\" : [], \"photos\" : [], \"network_measurements\" : [] }","title":"General"},{"location":"schemas/landmark/","text":"field POST Request database id auto integer (PK) latitude double double longitude double double landmark_type string string device_id integer integer file_url string string timestamp datetime auto datetime owner_id UUID UUID (User FK) Note Landmark id and timestamp fields are generated by the database, foreign key owner_id is passed through url query parameters.","title":"Landmark"},{"location":"schemas/network/","text":"field POST Request database id auto integer (PK) ping_time double double frequency double double file_size double double file_location string string download_speed double double download_latency double double download_duration double double upload_speed double double upload_duration double double gps_latitude double double gps_longitude double double device_id integer integer timestamp datetime owner_id UUID UUID (User FK) landmark_id integer integer (Landmark FK) Note Network id and timestamp fields are generated by the database, landmark_id and owner_id is passed through url query parameters.","title":"Network"},{"location":"schemas/photo/","text":"field POST Request database id auto integer (PK) url string string uploaded_at datetime landmark_id integer integer (Landmark FK) owner_id UUID UUID (User FK) Note Photo id and uploaded_at fields are generated by the database, landmark_id and owner_id is passed through url query parameters.","title":"Photo"},{"location":"schemas/user/","text":"field POST Request database id auto UUID (PK) email email-like string string pin big integer (6 digits) big integer full_name string string created_at datetime organization string string address string string Note User id and created_at field is auto-generated by the database","title":"User"}]}